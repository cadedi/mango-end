server:
  port: 8005
spring:
  application:
    name: mango-consumer
  cloud:
# 注册中心相关配置与cloud-config应当先于当前文件读取,迁至另一个文件
#    consul:
#      host: localhost
#      port: 8500
#      discovery:
#        service-name: ${spring.application.name} #注册到consul的服务名称
    # 配置熔断器sentinel控制台,sentinel dashboard以jar包形式提供,直接运行
    # Hystrix Dashboard与sentinel不同,是以依赖形式提供,需要集成到一个单独springboot项目再运行,并且只能监控单个服务,必需集成Turbine实现聚合监控
    sentinel:
      transport:
        dashboard: localhost:8080 #dashboard地址
        port: 8719 #与dashboard交互的端口号(注意不是项目的端口号),默认是8719
  boot:
    admin:
      client:
        url: "http://localhost:8000"
  zipkin:
    base-url: http://localhost:9411/
  sleuth:
    sampler:
      probability: 1 #样本采集率,默认为0.1,即10%

#spring-actuator 是一个健康检查包，提共了一些健康检查数据接口。安全起见，默认只开放了health和info接口,spring-admin默认依赖它,如果没有引入spring-admin,则启用config时要手动引入actuator
# 配置spring-actuator开放spring-admin健康检查接口
# spring-cloud-config也需要开放/refresh接口才能刷新配置文件
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

#当前项目不依赖ribbon,2020年的版本之后SpringCloud已把Ribbon移除,改为spring-cloud-loadBalancer,在配置类中配置策略
#ribbon更改负载均衡策略
#mango-producer: #已注册到注册中心(consul)的目标服务名,对该服务配置负载均衡策略(非必需,默认轮询策略)
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

feign:
  # 服务熔断器sentinel(代替hystrix)
  sentinel:
    enabled: true

#开启debug级别log可以输出sleuth每次追踪信息
#logging:
#  level:
#    org.springframework.cloud.openfeign: debug
#    org.springframework.cloud.sleuth: debug
